!function(window){"use strict";var numericRegex=/^[0-9]+$/,emailRegex=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,urlRegex=/^((http|https):\/\/(\w+:{0,1}\w*@)?(\S+)|)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/,defaults={messages:{required:"The %s field is required.",matches:"The %s field does not match the %s field.",valid_email:"The %s field must contain a valid email address.",valid_emails:"The %s field must contain all valid email addresses.",min_length:"The %s field must be at least %s characters in length.",max_length:"The %s field must not exceed %s characters in length.",exact_length:"The %s field must be exactly %s characters in length.",greater_than:"The %s field must contain a number greater than %s.",less_than:"The %s field must contain a number less than %s.",alpha:"The %s field must only contain alphabetical characters.",alpha_numeric:"The %s field must only contain alpha-numeric characters.",alpha_dash:"The %s field must only contain alpha-numeric characters, underscores, and dashes.",numeric:"The %s field must contain only numbers.",integer:"The %s field must contain an integer.",decimal:"The %s field must contain a decimal number.",is_natural:"The %s field must contain only positive numbers.",is_natural_no_zero:"The %s field must contain a number greater than zero.",valid_ip:"The %s field must contain a valid IP.",valid_base64:"The %s field must contain a base64 string.",valid_credit_card:"The %s field must contain a valid credit card number.",is_file_type:"The %s field must contain only %s files.",valid_url:"The %s field must contain a valid URL."}},ModelValidator=function(validations,callback){this.validations=validations,this.callback=callback,this.fieldValidations=[],this.isModelValid=!1,this._verifyValidations(),this._setupFieldValidations()};ModelValidator.prototype.isValid=function(){return this.isModelValid},ModelValidator.prototype.validate=function(model){this.isModelValid=!0;var errors={};if(null===model||void 0===model)throw"ModelValidator > model is undefined or null";var keys=Object.keys(model);0===keys.length;var i,j,fieldValidation,fieldValue,rule,param,hook,valid,message;for(i in this.fieldValidations){fieldValidation=this.fieldValidations[i],fieldValue=model[fieldValidation.name],valid=!0;for(j in fieldValidation.rules)rule=fieldValidation.rules[j],param=rule.param,hook=this._hooks[rule.name],void 0!==hook&&valid&&(valid=hook(fieldValue,param),valid||(this.isModelValid=!1,message=defaults.messages[rule.name],errors[fieldValidation.name]=message.replace("%s",fieldValidation.name).replace("%s",param)))}return"function"!=typeof this.callback?errors:void this.callback(errors)},ModelValidator.prototype._verifyValidations=function(){if(0===this.validations.length)throw"ModelValidator > no validations";var i,validation;for(i in this.validations)validation=this.validations[i],this._verifyValidation(validation)},ModelValidator.prototype._verifyValidation=function(validation){if(!validation.hasOwnProperty("name"))throw"ModelValidator > validation has no 'name' property";if(!validation.hasOwnProperty("rules")||"object"!=typeof validation.rules||0===validation.rules.length){var name=validation.name;throw"ModelValidator > validation with name '"+name+"' has no rules defined"}},ModelValidator.prototype._setupFieldValidations=function(){var i;for(i in this.validations){var validation=this.validations[i];this._setupFieldValidation(validation)}},ModelValidator.prototype._setupFieldValidation=function(validation){this.fieldValidations[validation.name]={name:validation.name,rules:validation.rules}},ModelValidator.prototype._hooks={required:function(value){return null!==value&&""!==value&&void 0!==value},min_length:function(value,length){return numericRegex.test(length)?null!==value&&void 0!==value&&value.length>=length:!1},max_length:function(value,length){return numericRegex.test(length)?null!==value&&void 0!==value&&value.length<=length:!1},exact_length:function(value,length){return numericRegex.test(length)?value.length===length:!1},valid_email:function(value){return emailRegex.test(value)},valid_url:function(value){return urlRegex.test(value)}},window.ModelValidator=ModelValidator}(window,document);